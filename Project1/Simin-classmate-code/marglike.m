function ml = marglike(lambda,n,T,d,omega,psi,x,yreg,btilde) 
%% Log ML (ignoring constants that don't depend on lambda) is:
% -n/2     * log(|lambda^2*omega|) - n/2 *log(|x'x + inv(lambda^2*omega)|)
% -(T+d)/2 * log(|psi + ehat'ehat + 
% (bhat -btilde)'*(inv(lambda^2*omega))*bhat - btilde)'|)
ml = (-1) * (-(n/2)   * log(det(lambda^2*omega))             ...
             -(n/2)   * log(det(x'*x + inv(lambda^2*omega)))  ...
             -(T+d)/2 * log(det(psi + (yreg-x*((x'*x + inv(lambda^2*omega)) \ (x'*yreg+inv(lambda^2*omega)*btilde)))'... 
             * (yreg-x*((x'*x + inv(lambda^2*omega)) \ (x'*yreg+inv(lambda^2*omega)*btilde))) ...
             + ((x'*x + inv(lambda^2*omega)) \ (x'*yreg+inv(lambda^2*omega)*btilde)-btilde)'...
             * inv(lambda^2*omega) ...
             * ((x'*x + inv(lambda^2*omega)) \ (x'*yreg+inv(lambda^2*omega)*btilde)-btilde))));
end
% v.B = (x'*x + inv(lambda^2*omega)) \ (x'*yreg+inv(lambda^2*omega)*btilde);
% 
% function fun= ML(x,y,lambda,omega1_inv,beta_tilde,D_o,D_p,j,p,n)
%          I=eye(n);
%          I_k= eye(n*p+1);
%          d=n+2;
%          fun=-(-n/2*log(det(lambda^2*D_o'*x'*x*D_o+I_k)) % first 2 terms
%          -(j-p+d)/2*log(det(I+D_p'*((y-x*inv(x'*x+1/(lambda^2)*omega1_inv)*(x'*y+1/(lambda^2)*omega1_inv*beta_tilde))'*...
%             (y-x*inv(x'*x+1/(lambda^2)*omega1_inv)*(x'*y+1/(lambda^2)*omega1_inv*beta_tilde))+...
%             (inv(x'*x+1/(lambda^2)*omega1_inv)*(x'*y+1/(lambda^2)*omega1_inv*beta_tilde)-beta_tilde)'*1/(lambda^2)*omega1_inv*...
%             (inv(x'*x+1/(lambda^2)*omega1_inv)*(x'*y+1/(lambda^2)*omega1_inv*beta_tilde)-beta_tilde))*D_p)));
% end